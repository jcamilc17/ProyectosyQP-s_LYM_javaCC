/**
 * JavaCC file
 */
 
options {
  IGNORE_CASE = true;
  STATIC = false;
}
PARSER_BEGIN(ParserCAMLco)
package uniandes.lym.parserJavaCC.parserCAML;
  

 
public class ParserCAMLco {

} 

PARSER_END(ParserCAMLco)

SKIP :
{
 	" " | "\r" | "\t" | "\n"
}
TOKEN : /* OPERATORS */
{
    <PP: "::">
}

TOKEN :
{
    < INT: ( <DIGIT> )+ >
|   < #DIGIT: ["0" -"9"] >
}

void camlList():
{}
{
     listPrep() ("@"  listPrep())*  
}

void listPrep():
{}
{
  	 ( num() <PP> )  listPrep()
  |   simpleList()
}

void simpleList():
{}
{
 "[" [(num()  (","  num() )*)] "]" 
 | "(" camlList() ")"
    
}

 
int num() throws Error:
{	
	int total=1;
	Token token;
}

{
    
	(token=<INT>)

	{ 
		try {
			total = Integer.parseInt(token.image);
		} 
		catch (NumberFormatException ee) 
		{
			// Dada la forma de <ENTERO>, sabemos que solo puede tener d�gitos y signo
			// Si cae ac� es por que el signo era +
			throw new Error("Numero demasiado grande"+token.image);
		}
		return total;
     }
     
     
}